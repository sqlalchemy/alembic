from alembic.ddl.base import (
    AddColumn,
    ColumnComment,
    ColumnDefault,
    ColumnName,
    ColumnNullable,
    ColumnType,
    RenameTable,
)
from sqlalchemy.dialects.oracle.base import OracleDDLCompiler
from sqlalchemy.sql.schema import Column
from typing import Any

def add_column(compiler: OracleDDLCompiler, column: Column, **kw) -> str: ...
def alter_column(compiler: OracleDDLCompiler, name: str) -> str: ...
def visit_add_column(
    element: AddColumn, compiler: OracleDDLCompiler, **kw
) -> str: ...
def visit_column_comment(
    element: ColumnComment, compiler: OracleDDLCompiler, **kw
) -> str: ...
def visit_column_default(
    element: ColumnDefault, compiler: OracleDDLCompiler, **kw
) -> str: ...
def visit_column_name(
    element: ColumnName, compiler: OracleDDLCompiler, **kw
) -> str: ...
def visit_column_nullable(
    element: ColumnNullable, compiler: OracleDDLCompiler, **kw
) -> str: ...
def visit_column_type(
    element: ColumnType, compiler: OracleDDLCompiler, **kw
) -> str: ...
def visit_rename_table(
    element: RenameTable, compiler: OracleDDLCompiler, **kw
) -> str: ...

class OracleImpl:
    def __init__(self, *arg, **kw) -> None: ...
    def _exec(self, construct: Any, *args, **kw) -> None: ...
    def emit_begin(self) -> None: ...
    def emit_commit(self) -> None: ...
