[tox]


envlist = py-sqlalchemy

SQLA_REPO = {env:SQLA_REPO:git+https://github.com/sqlalchemy/sqlalchemy.git}

[testenv]
cov_args=--cov=alembic --cov-report term --cov-report xml

deps=pytest>4.6
     pytest-xdist
     sqla13: {[tox]SQLA_REPO}@rel_1_3#egg=sqlalchemy
     sqlamaster: {[tox]SQLA_REPO}@master#egg=sqlalchemy
     postgresql: psycopg2>=2.7
     mysql: mysqlclient>=1.4.0
     mysql: pymysql
     oracle: cx_oracle>=7
     mssql: pyodbc
     cov: pytest-cov
     sqlalchemy: sqlalchemy>=1.3.0
     mako
     python-dateutil
     zimports
     black



usedevelop=
     cov: True

# only use --dropfirst option if we're *not* using -n;
# if -n is used, we're working in brand new DBs anyway
setenv=
    BASECOMMAND=python -m pytest --rootdir {toxinidir}
    WORKERS={env:TOX_WORKERS:-n4}
    sqla079: WORKERS=--dropfirst
    cov: COVERAGE={[testenv]cov_args}
    sqlite: SQLITE={env:TOX_SQLITE:--db sqlite}
    postgresql: POSTGRESQL={env:TOX_POSTGRESQL:--db postgresql}
    mysql: MYSQL={env:TOX_MYSQL:--db mysql}
    oracle: ORACLE={env:TOX_ORACLE:--db oracle} --low-connections --write-idents db_idents.txt
    mssql: MSSQL={env:TOX_MSSQL:--db mssql}
    pyoptimize: PYTHONOPTIMIZE=1
    pyoptimize: LIMITTESTS="tests/test_script_consumption.py"
    future: SQLALCHEMY_TESTING_FUTURE_ENGINE=1
    SQLALCHEMY_WARN_20=1


# tox as of 2.0 blocks all environment variables from the
# outside, unless they are here (or in TOX_TESTENV_PASSENV,
# wildcards OK).  Need at least these
passenv=ORACLE_HOME NLS_LANG TOX_SQLITE TOX_POSTGRESQL TOX_MYSQL TOX_ORACLE TOX_MSSQL

commands=
  {env:BASECOMMAND} {env:WORKERS} {env:SQLITE:} {env:POSTGRESQL:} {env:MYSQL:} {env:ORACLE:} {env:MSSQL:} {env:BACKENDONLY:} {env:COVERAGE:} {env:LIMITTESTS:} {posargs}
  {oracle,mssql}: python reap_dbs.py db_idents.txt


[testenv:mypy]
basepython = python3
deps=
    mypy
    sqlalchemy>=1.4.0
    sqlalchemy2-stubs
    mako
    types-pkg-resources
    types-python-dateutil
    # is imported in alembic/testing and mypy complains if it's not installed.
    pytest
commands = mypy ./alembic/ --exclude alembic/templates

[testenv:pep8]
basepython = python3
deps=
      flake8
      flake8-import-order
      flake8-builtins
      flake8-docstrings
      flake8-rst-docstrings
      pydocstyle<4.0.0
      # used by flake8-rst-docstrings
      pygments
      black==21.5b1
commands =
     flake8 ./alembic/ ./tests/ setup.py docs/build/conf.py {posargs}
     black --check setup.py tests alembic
